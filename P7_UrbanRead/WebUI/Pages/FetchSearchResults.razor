@page "/"
@page "/fetchsearchresults"

@using WebUI.Data
@using P7_UrbanRead
@using Microsoft.AspNetCore.Components.QuickGrid
@inject MainDataService SearchBook
@inject NavigationManager Navigation

<PageTitle>Urban Library Search</PageTitle>

<h1>Urban Library</h1>

<div id="search_menu">

    <div id="search_txt">
        <InputText type="search" id="query" name="q" placeholder="Book..." @bind-Value="_searchTopic"></InputText>
        <button class="btn btn-search" @onclick="FetchResults">Search</button>
    </div>

    <div id="categories">
        <InputRadioGroup @bind-Value=_selectedCategory> Categories:
            @foreach(var cat in categories)
            {
                <div class="form-check-inline">
                    <InputRadio class="form-check-input" Value="cat.rdValue"></InputRadio>
                    <label class="form-check-label">@cat.rdLabel</label>
                </div>
            }
        </InputRadioGroup>
    </div>
   
    <div id="filters">
        <InputRadioGroup @bind-Value=_selectedFilter> Filters:

            @foreach(var flt in filters)
            {
                <div class="form-check-inline">
                    <InputRadio class="form-check-input" Value="flt.rdValue"></InputRadio>
                    <label class="form-check-label">@flt.rdLabel</label>
                </div>
            }
        </InputRadioGroup>

    </div>

</div>


<div class="search_results">

    @if (_isVisible)
    {
        <QuickGrid Items="@_results" Pagination="@pagination" Theme="corporate">
            
            <TemplateColumn title="" class="cover">
                <img class="cover" src="@context.CoverImgLink" alt="Cover"/>
            </TemplateColumn>

            <TemplateColumn title="Title" class="book-title">
                @context.Title
            </TemplateColumn>

            <TemplateColumn title="Description" class="description">
                @context.Description
            </TemplateColumn>

            <TemplateColumn title="Authors" class="author">
                @for(int a = context.Authors.Count -1; a >= 0; a--)
                {
                    var author = context.Authors[a];
                    if (a > 0)
                    {
                        <p>@author,</p>
                    }
                    else
                    {
                        <p>@author</p>
                    }
                }
            </TemplateColumn>

            <TemplateColumn title="Publisher" class="publisher">
                @context.PublisherName
            </TemplateColumn>

            <TemplateColumn title="ISBNs" class="isbn">
                @for (int i = context.ISBNS.Count - 1; i >= 0; i--)
                {
                    var isbn = context.ISBNS[i].ToString();
                    if (i > 0)
                    {
                        <p>@isbn,</p>
                    }
                    else
                    {
                        <p>@isbn</p>
                    }
                }
           </TemplateColumn>

           <TemplateColumn title="Action" class="action">
                <a class="btn btn-details" href="/BookDetails" target="_blank">Read More</a>
            </TemplateColumn>
        </QuickGrid>
    }
</div>
<Paginator State="@pagination" />
   

@code 
{

    List<Book> _searchResults = new List<Book>();
    IQueryable<Book> _results;

    private string _searchTopic;
    private string _selectedCategory = "";
    private string _selectedFilter = "partial";

    private bool _isVisible = false;
    PaginationState pagination = new PaginationState { ItemsPerPage = 10 };

    private void FetchResults()
    {
        if (!String.IsNullOrEmpty(_searchTopic))
        {
            _isVisible = true;
            _searchResults = MainDataService.SearchBook(_searchTopic, _selectedCategory, _selectedFilter);
            _results = _searchResults.AsQueryable();

        }

    }



    List<RadioOptions> categories = new List<RadioOptions>()
    {
        new RadioOptions(){ rdLabel = "Subject", rdValue = ""},
        new RadioOptions(){ rdLabel = "Title", rdValue = "intitle"},
        new RadioOptions(){ rdLabel = "ISBN", rdValue = "isbn"},
        new RadioOptions(){ rdLabel = "Author", rdValue = "inauthor"},
    };


    List<RadioOptions> filters = new List<RadioOptions>()
    {
        new RadioOptions(){ rdLabel = "All Books", rdValue = "partial"},
        new RadioOptions(){ rdLabel = "All eBooks", rdValue = "ebooks"},
        new RadioOptions(){ rdLabel = "Only Free eBooks", rdValue = "free-ebooks"},
        new RadioOptions(){ rdLabel = "Only Paid eBooks", rdValue = "paid-ebooks"},
    };

    public class RadioOptions
    {
        public string rdLabel { get; set; }
        public string rdValue { get; set; }
    }

    

}