@page "/usermgmt/edit"

@using Microsoft.AspNetCore.Identity
@using Microsoft.EntityFrameworkCore
@using WebUI.Areas.Identity.Data
@using P7_UrbanRead
@inject WebUI.Data.WebUIContext DBContext
@inject NavigationManager NavigationManager

<h3>Edit User</h3>
<hr />

<div class="row">
    <div class="col-md-4">
        <EditForm Model="@_User" FormName="edit" Enhance>
            <DataAnnotationsValidator />
            <ValidationSummary class="text-danger" />
            <div class="mb-3">
                <label for="FirstName" class="form-label">First Name:</label>
                <InputText id="firstname" @bind-Value="_User._Person.FirstName" class="form-control" />
                <ValidationMessage For="() => _User._Person.FirstName" class="text-danger" />
            </div>
            <div class="mb-3">
                <label for="LastName" class="form-label">Last Name:</label> 
                <InputText id="lastname" @bind-Value="_User._Person.LastName" class="form-control" />
                <ValidationMessage For="() => _User._Person.LastName" class="text-danger" />
            </div>
            <div class="mb-3">
                <label for="PrimaryEmail" class="form-label">Primary E-mail:</label>
                <InputText id="primaryemail" @bind-Value="_User._Person.PrimaryEmail" class="form-control" placeholder="name@example.com" />
                <ValidationMessage For="() => _User._Person.PrimaryEmail" class="text-danger" />
            </div>
            <div class="mb-3">
                <label for="SecondaryEmail" class="form-label">Secondary E-mail:</label>
                <InputText id="secondaryemail" @bind-Value="_User._Person.SecondaryEmail" class="form-control" placeholder="name@example.com" />
                <ValidationMessage For="() => _User._Person.SecondaryEmail" class="text-danger" />
            </div>
            <div class="mb-3">
                <label for="DateOfBirth" class="form-label">Date of Birth:</label>
                <InputDate id="dob" @bind-Value="_User._Person.DateOfBirth" class="form-control" />
                <ValidationMessage For="() => _User._Person.DateOfBirth" class="text-danger" />
            </div>
            <div class="mb-3">
                <label for="Phone number (mobile)" class="form-label">Phone (mobile):</label>
                <InputNumber id="phone" @bind-Value="_User._Person.MobilePhoneNumber" class="form-control" />
                <ValidationMessage For="() => _User._Person.MobilePhoneNumber" class="text-danger" />
            </div>
            <div class="mb-3">
                <label for="Phone number (mobile)" class="form-label">Phone (home):</label>
                <InputNumber id="phone" @bind-Value="_User._Person.AlternativePhoneNumber" class="form-control" />
                <ValidationMessage For="() => _User._Person.AlternativePhoneNumber" class="text-danger" />
            </div>

            <button type="submit" @onclick="UpdateUser" class="btn btn-primary">Save</button>
        </EditForm>
    </div>

</div>

<div>
    <a href="/usermgmt">Back to List</a>
</div>


@code {
    [SupplyParameterFromQuery]
    public string Id { get; set; }

    [SupplyParameterFromForm]
    public WebUIUser _User { get; set; } = new();


    protected override void OnInitialized()
    {
       
        _User = DBContext.Users.Find(Id);

    }

    public async Task UpdateUser()
    {

        try
        {
           await DBContext.SaveChangesAsync();
        }
        catch (DbUpdateConcurrencyException ex)
        {
            ex.Entries.Single().Reload();
            await DBContext.SaveChangesAsync();
        }

        NavigationManager.NavigateTo("/usermgmt");

    }

}

