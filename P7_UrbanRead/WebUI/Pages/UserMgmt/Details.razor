@page "/usermgmt/details"
@using Microsoft.AspNetCore.Identity
@using Microsoft.EntityFrameworkCore
@using WebUI.Areas.Identity.Data
@using P7_UrbanRead
@inject WebUI.Data.WebUIContext DBContext
@inject NavigationManager NavigationManager



<PageTitle>Details</PageTitle>

<h3>@_usermgmt._Person.FirstName @_usermgmt._Person.LastName</h3>
<hr />

<div>
    <dl class="row">
        <dt class="col-sm-2">Identity Id:</dt>
        <dd class="col-sm-10">@_usermgmt.Id</dd>
        <dt class="col-sm-2">Username:</dt>
        <dd class="col-sm-10">@_usermgmt.UserName</dd>
        <dt class="col-sm-2">Date of Birth:</dt>
        <dd class="col-sm-10">@_usermgmt._Person.DateOfBirth.ToShortDateString()</dd>
        <hr />
        <dt class="col-sm-2">E-mail (main):</dt>
        <dd class="col-sm-10">@_usermgmt._Person.PrimaryEmail</dd>
        <dt class="col-sm-2">E-mail (second):</dt>
        <dd class="col-sm-10">@_usermgmt._Person.SecondaryEmail</dd>
        <dt class="col-sm-2">Phone number (mobile):</dt>
        <dd class="col-sm-10">@_usermgmt._Person.MobilePhoneNumber</dd>
        <dt class="col-sm-2">Phone number (home):</dt>
        <dd class="col-sm-10">@_usermgmt._Person.MobilePhoneNumber</dd>
        <hr />
        <dt class="col-sm-2">Address#/Suite#</dt>
        <dd class="col-sm-10">@_usermgmt._Person.Address.StreetNumber / @_usermgmt._Person.Address.AptSuite </dd>
        <dt class="col-sm-2">Address</dt>
        <dd class="col-sm-10">@_usermgmt._Person.Address.StreetName</dd>
        <dt class="col-sm-2">City/Province</dt>
        <dd class="col-sm-10">@_usermgmt._Person.Address.City / @_usermgmt._Person.Address.StateProvince</dd>
        <dt class="col-sm-2">Postal Code</dt>
        <dd class="col-sm-10">@_usermgmt._Person.Address.PostalCode</dd>
        <dt class="col-sm-2">Country</dt>
        <dd class="col-sm-10">@_usermgmt._Person.Address.Country</dd>
        <hr />
    </dl>

    <div>
        <a href="@($"/usermgmt")">Back to Users List</a>
    </div>
</div>


@code {
    WebUIUser _usermgmt;

    [SupplyParameterFromQuery]
    public string Id  { get; set; }


    protected override async Task OnInitializedAsync()
    {

        _usermgmt = DBContext.Users.Include(p => p._Person)
                                   .ThenInclude(a => a.Address)
                                   .FirstOrDefaultAsync(u => u.Id == Id)
                                   .Result;
        
        if (_usermgmt is null)
        {
            NavigationManager.NavigateTo("notfound");
        }
    }

}
